{
	"info": {
		"_postman_id": "7e90d923-9648-412c-bd73-06977667d5c9",
		"name": "what3words API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17609323",
		"_collection_link": "https://w3w-product-team.postman.co/workspace/W3W-workspace~a121c16e-94e0-408a-a89e-a5645b5e793a/collection/17609323-7e90d923-9648-412c-bd73-06977667d5c9?action=share&source=collection_link&creator=17609323"
	},
	"item": [
		{
			"name": "grid-section",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.what3words.com/v3/grid-section?key=YOUR-API-KEY&bounding-box=41.715357897380166,-81.23006078232189,41.72170994565959,-81.22155079711163",
					"host": [
						"https://api.what3words.com/v3"
					],
					"path": [
						"grid-section"
					],
					"query": [
						{
							"key": "key",
							"value": "YOUR-API-KEY",
							"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
						},
						{
							"key": "bounding-box",
							"value": "41.715357897380166,-81.23006078232189,41.72170994565959,-81.22155079711163",
							"description": "Bounding box, as a lat,lng,lat,lng, for which the grid should be returned. The requested box must not exceed 4km from corner to corner, or a BadBoundingBoxTooBig error will be returned. Latitudes must be >= -90 and <= 90, but longitudes are allowed to wrap around 180. To specify a bounding-box that crosses the anti-meridian, use longitude greater than 180. EG: bounding-box=50.0,179.995,50.01,180.0005"
						},
						{
							"key": "format",
							"value": "geojson",
							"description": "Return data format type; can be either json (the default) or geojson",
							"disabled": true
						}
					]
				},
				"description": "\nThis endpoint makes an HTTP GET request to retrieve a grid section using the provided bounding box coordinates. The request includes the bounding box coordinates and an API key for authentication.\n\n"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/grid-section?key=YOUR-API-KEY&bounding-box=41.715357897380166,-81.23006078232189,41.72170994565959,-81.22155079711163",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"grid-section"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "bounding-box",
									"value": "41.715357897380166,-81.23006078232189,41.72170994565959,-81.22155079711163",
									"description": "Bounding box, as a lat,lng,lat,lng, for which the grid should be returned. The requested box must not exceed 4km from corner to corner, or a BadBoundingBoxTooBig error will be returned. Latitudes must be >= -90 and <= 90, but longitudes are allowed to wrap around 180. To specify a bounding-box that crosses the anti-meridian, use longitude greater than 180. EG: bounding-box=50.0,179.995,50.01,180.0005"
								},
								{
									"key": "format",
									"value": "geojson",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"lines\": [\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715368\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715368\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715395\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715395\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715422\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715422\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715448\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715448\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715475\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715475\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715502\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715502\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715529\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715529\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715556\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715556\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715583\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715583\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71561\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71561\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715637\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715637\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715664\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715664\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715691\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715691\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715718\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715718\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715745\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715745\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715772\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715772\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715799\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715799\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715826\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715826\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715853\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715853\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71588\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71588\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715907\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715907\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715934\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715934\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715961\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715961\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.715987\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.715987\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716014\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716014\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716041\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716041\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716068\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716068\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716095\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716095\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716122\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716122\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716149\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716149\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716176\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716176\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716203\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716203\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71623\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71623\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716257\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716257\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716284\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716284\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716311\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716311\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716338\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716338\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716365\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716365\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716392\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716392\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716419\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716419\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716446\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716446\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716473\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716473\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.7165\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.7165\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716527\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716527\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716553\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716553\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71658\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71658\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716607\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716607\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716634\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716634\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716661\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716661\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716688\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716688\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716715\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716715\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716742\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716742\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716769\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716769\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716796\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716796\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716823\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716823\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71685\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71685\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716877\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716877\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716904\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716904\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716931\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716931\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716958\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716958\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.716985\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.716985\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717012\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717012\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717039\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717039\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717066\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717066\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717092\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717092\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717119\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717119\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717146\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717146\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717173\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717173\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.7172\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.7172\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717227\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717227\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717254\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717254\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717281\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717281\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717308\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717308\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717335\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717335\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717362\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717362\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717389\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717389\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717416\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717416\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717443\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717443\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71747\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71747\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717497\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717497\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717524\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717524\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717551\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717551\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717578\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717578\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717605\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717605\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717632\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717632\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717658\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717658\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717685\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717685\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717712\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717712\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717739\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717739\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717766\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717766\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717793\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717793\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71782\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71782\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717847\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717847\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717874\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717874\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717901\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717901\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717928\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717928\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717955\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717955\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.717982\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.717982\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718009\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718009\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718036\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718036\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718063\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718063\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71809\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71809\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718117\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718117\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718144\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718144\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718171\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718197\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718197\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718224\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718224\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718251\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718251\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718278\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718278\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718305\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718305\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718332\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718332\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718359\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718359\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718386\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718386\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718413\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718413\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71844\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71844\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718467\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718467\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718494\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718494\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718521\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718521\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718548\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718548\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718575\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718575\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718602\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718602\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718629\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718629\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718656\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718656\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718683\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718683\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71871\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71871\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718737\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718737\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718763\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718763\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71879\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71879\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718817\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718817\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718844\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718844\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718871\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718871\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718898\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718898\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718925\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718925\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718952\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718952\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.718979\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.718979\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719006\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719006\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719033\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719033\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71906\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71906\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719087\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719087\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719114\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719114\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719141\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719141\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719168\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719168\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719195\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719195\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719222\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719222\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719249\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719249\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719276\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719276\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719303\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719303\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719329\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719329\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719356\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719356\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719383\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719383\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71941\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71941\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719437\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719437\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719464\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719464\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719491\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719491\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719518\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719518\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719545\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719545\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719572\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719572\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719599\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719599\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719626\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719626\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719653\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719653\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.71968\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.71968\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719707\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719707\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719734\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719734\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719761\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719761\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719788\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719788\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719815\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719815\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719842\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719842\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719868\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719868\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719895\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719895\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719922\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719922\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719949\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719949\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.719976\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.719976\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720003\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720003\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.72003\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.72003\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720057\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720057\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720084\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720084\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720111\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720111\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720138\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720138\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720165\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720165\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720192\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720192\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720219\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720219\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720246\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720246\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720273\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720273\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.7203\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.7203\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720327\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720327\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720354\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720354\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720381\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720381\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720408\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720408\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720434\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720434\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720461\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720461\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720488\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720488\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720515\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720515\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720542\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720542\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720569\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720569\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720596\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720596\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720623\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720623\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.72065\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.72065\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720677\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720677\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720704\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720704\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720731\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720731\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720758\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720758\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720785\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720785\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720812\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720812\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720839\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720839\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720866\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720866\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720893\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720893\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.72092\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.72092\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720947\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720947\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.720973\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.720973\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721027\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721027\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721054\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721054\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721081\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721081\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721108\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721108\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721135\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721135\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721162\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721162\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721189\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721189\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721216\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721216\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721243\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721243\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.72127\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.72127\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721297\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721297\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721324\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721324\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721351\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721351\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721378\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721378\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721405\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721405\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721432\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721432\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721459\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721459\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721486\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721486\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721513\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721513\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721539\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721539\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721566\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721566\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721593\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721593\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.72162\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.72162\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721647\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721647\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721674\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721674\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230061,\n                \"lat\": 41.721701\n            },\n            \"end\": {\n                \"lng\": -81.221551,\n                \"lat\": 41.721701\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230052,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.230052,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.230016,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.230016,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22998,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22998,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229944,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229944,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229907,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229907,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229871,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229871,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229835,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229835,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229799,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229799,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229763,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229763,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229727,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229727,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229691,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229691,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229655,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229655,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229618,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229618,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229582,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229582,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229546,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229546,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22951,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22951,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229474,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229474,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229438,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229438,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229402,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229402,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229365,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229365,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229329,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229329,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229293,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229293,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229257,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229257,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229221,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229221,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229185,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229185,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229149,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229149,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229112,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229112,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229076,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229076,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22904,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22904,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.229004,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.229004,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228968,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228968,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228932,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228932,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228896,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228896,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228859,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228859,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228823,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228823,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228787,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228787,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228751,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228751,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228715,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228715,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228679,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228679,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228643,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228643,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228607,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228607,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22857,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22857,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228534,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228534,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228498,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228498,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228462,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228462,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228426,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228426,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22839,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22839,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228354,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228354,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228317,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228317,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228281,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228281,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228245,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228245,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228209,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228209,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228173,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228173,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228137,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228137,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228101,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228101,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228064,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228064,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.228028,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.228028,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227992,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227992,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227956,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227956,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22792,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22792,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227884,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227884,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227848,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227848,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227812,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227812,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227775,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227775,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227739,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227739,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227703,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227703,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227667,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227667,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227631,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227631,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227595,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227595,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227559,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227559,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227522,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227522,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227486,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227486,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22745,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22745,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227414,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227414,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227378,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227378,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227342,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227342,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227306,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227306,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227269,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227269,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227233,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227233,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227197,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227197,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227161,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227161,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227125,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227125,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227089,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227089,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227053,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227053,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.227016,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.227016,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22698,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22698,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226944,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226944,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226908,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226908,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226872,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226872,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226836,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226836,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.2268,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.2268,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226764,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226764,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226727,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226727,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226691,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226691,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226655,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226655,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226619,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226619,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226583,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226583,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226547,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226547,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226511,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226511,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226474,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226474,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226438,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226438,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226402,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226402,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226366,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226366,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22633,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22633,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226294,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226294,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226258,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226258,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226221,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226221,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226185,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226185,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226149,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226149,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226113,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226113,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226077,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226077,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226041,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226041,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.226005,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.226005,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225968,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225968,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225932,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225932,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225896,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225896,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22586,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22586,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225824,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225824,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225788,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225788,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225752,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225752,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225716,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225716,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225679,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225679,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225643,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225643,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225607,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225607,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225571,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225571,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225535,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225535,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225499,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225499,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225463,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225463,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225426,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225426,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22539,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22539,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225354,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225354,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225318,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225318,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225282,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225282,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225246,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225246,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22521,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22521,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225173,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225173,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225137,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225137,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225101,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225101,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225065,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225065,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.225029,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.225029,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224993,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224993,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224957,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224957,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22492,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22492,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224884,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224884,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224848,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224848,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224812,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224812,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224776,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224776,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22474,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22474,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224704,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224704,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224668,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224668,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224631,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224631,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224595,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224595,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224559,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224559,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224523,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224523,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224487,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224487,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224451,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224451,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224415,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224415,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224378,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224378,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224342,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224342,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224306,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224306,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22427,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22427,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224234,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224234,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224198,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224198,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224162,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224162,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224125,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224125,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224089,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224089,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224053,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224053,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.224017,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.224017,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223981,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223981,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223945,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223945,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223909,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223909,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223873,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223873,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223836,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223836,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.2238,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.2238,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223764,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223764,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223728,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223728,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223692,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223692,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223656,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223656,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22362,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22362,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223583,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223583,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223547,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223547,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223511,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223511,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223475,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223475,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223439,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223439,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223403,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223403,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223367,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223367,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22333,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22333,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223294,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223294,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223258,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223258,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223222,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223222,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223186,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223186,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22315,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22315,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223114,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223114,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223077,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223077,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223041,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223041,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.223005,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.223005,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222969,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222969,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222933,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222933,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222897,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222897,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222861,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222861,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222825,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222825,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222788,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222788,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222752,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222752,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222716,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222716,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22268,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22268,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222644,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222644,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222608,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222608,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222572,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222572,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222535,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222535,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222499,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222499,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222463,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222463,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222427,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222427,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222391,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222391,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222355,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222355,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222319,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222319,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222282,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222282,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222246,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222246,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22221,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22221,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222174,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222174,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222138,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222138,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222102,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222102,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222066,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222066,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.222029,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.222029,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221993,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221993,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221957,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221957,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221921,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221921,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221885,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221885,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221849,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221849,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221813,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221813,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221777,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221777,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22174,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22174,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221704,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221704,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221668,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221668,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221632,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221632,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.221596,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.221596,\n                \"lat\": 41.72171\n            }\n        },\n        {\n            \"start\": {\n                \"lng\": -81.22156,\n                \"lat\": 41.715358\n            },\n            \"end\": {\n                \"lng\": -81.22156,\n                \"lat\": 41.72171\n            }\n        }\n    ]\n}"
				},
				{
					"name": "401 InvalidKey",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/grid-section?key=xx&bounding-box=41.715357897380166,-81.23006078232189,41.72170994565959,-81.22155079711163",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"grid-section"
							],
							"query": [
								{
									"key": "key",
									"value": "xx",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "bounding-box",
									"value": "41.715357897380166,-81.23006078232189,41.72170994565959,-81.22155079711163",
									"description": "Bounding box, as a lat,lng,lat,lng, for which the grid should be returned. The requested box must not exceed 4km from corner to corner, or a BadBoundingBoxTooBig error will be returned. Latitudes must be >= -90 and <= 90, but longitudes are allowed to wrap around 180. To specify a bounding-box that crosses the anti-meridian, use longitude greater than 180. EG: bounding-box=50.0,179.995,50.01,180.0005"
								},
								{
									"key": "format",
									"value": "geojson",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"InvalidKey\",\n        \"message\": \"Authentication failed; invalid API key\"\n    }\n}"
				},
				{
					"name": "400 BadBoundingBox",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/grid-section?key=YOUR-API-KEY&bounding-box=x,x",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"grid-section"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "bounding-box",
									"value": "x,x",
									"description": "Bounding box, as a lat,lng,lat,lng, for which the grid should be returned. The requested box must not exceed 4km from corner to corner, or a BadBoundingBoxTooBig error will be returned. Latitudes must be >= -90 and <= 90, but longitudes are allowed to wrap around 180. To specify a bounding-box that crosses the anti-meridian, use longitude greater than 180. EG: bounding-box=50.0,179.995,50.01,180.0005"
								},
								{
									"key": "format",
									"value": "geojson",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadBoundingBox\",\n        \"message\": \"bounding-box must be lat,lng,lat,lng such as 39.903795,116.384550,39.902718,116.383122\"\n    }\n}"
				},
				{
					"name": "400 BadBoundingBoxTooBig",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/grid-section?key=YOUR-API-KEY&bounding-box=10,20,11,21",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"grid-section"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "bounding-box",
									"value": "10,20,11,21",
									"description": "Bounding box, as a lat,lng,lat,lng, for which the grid should be returned. The requested box must not exceed 4km from corner to corner, or a BadBoundingBoxTooBig error will be returned. Latitudes must be >= -90 and <= 90, but longitudes are allowed to wrap around 180. To specify a bounding-box that crosses the anti-meridian, use longitude greater than 180. EG: bounding-box=50.0,179.995,50.01,180.0005"
								},
								{
									"key": "format",
									"value": "geojson",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadBoundingBoxTooBig\",\n        \"message\": \"The diagonal of bounding-box may not be > 4km\"\n    }\n}"
				},
				{
					"name": "400 BadFormat",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/grid-section?key=YOUR-API-KEY&bounding-box=41.715357897380166,-81.23006078232189,41.72170994565959,-81.22155079711163&format=xx",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"grid-section"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "bounding-box",
									"value": "41.715357897380166,-81.23006078232189,41.72170994565959,-81.22155079711163",
									"description": "Bounding box, as a lat,lng,lat,lng, for which the grid should be returned. The requested box must not exceed 4km from corner to corner, or a BadBoundingBoxTooBig error will be returned. Latitudes must be >= -90 and <= 90, but longitudes are allowed to wrap around 180. To specify a bounding-box that crosses the anti-meridian, use longitude greater than 180. EG: bounding-box=50.0,179.995,50.01,180.0005"
								},
								{
									"key": "format",
									"value": "xx",
									"description": "Return data format type; can be either json (the default) or geojson"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadFormat\",\n        \"message\": \"Format must be one of json,geojson\"\n    }\n}"
				}
			]
		},
		{
			"name": "convert-to-3WA",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.what3words.com/v3/convert-to-3wa?key=YOUR-API-KEY&coordinates=51.521251,-0.203586&language=en&locale",
					"host": [
						"https://api.what3words.com/v3"
					],
					"path": [
						"convert-to-3wa"
					],
					"query": [
						{
							"key": "key",
							"value": "YOUR-API-KEY",
							"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
						},
						{
							"key": "coordinates",
							"value": "51.521251,-0.203586",
							"description": "Coordinates as a comma separated string of latitude and longitude"
						},
						{
							"key": "format",
							"value": "json",
							"description": "Return data format type; can be either json (the default) or geojson",
							"disabled": true
						},
						{
							"key": "language",
							"value": "en",
							"description": "A supported 3 word address language as an ISO 639-1 2 letter code. For Bosnian-Croatian-Montenegrin-Serbian use oo. Defaults to en (English). For a full list of 3 word address languages, see available-languages."
						},
						{
							"key": "locale",
							"value": null,
							"description": "Locale to specify a variant of a language"
						}
					]
				},
				"description": "\nThis endpoint makes an HTTP GET request to the https://api.what3words.com/v3/convert-to-3wa resource to convert coordinates to a what3words address. The request includes the API key and the coordinates in the query parameters. The response will have a status code of 200 and will include information such as the country, square boundaries, nearest place, coordinates, what3words address, language, and a map link.\n\n"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-3wa?key=YOUR-API-KEY&coordinates=51.521251,-0.203586&language=en",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-3wa"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY"
								},
								{
									"key": "coordinates",
									"value": "51.521251,-0.203586"
								},
								{
									"key": "format",
									"value": "json",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en"
								},
								{
									"key": "locale",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"country\": \"GB\",\n    \"square\": {\n        \"southwest\": {\n            \"lng\": -0.203607,\n            \"lat\": 51.521238\n        },\n        \"northeast\": {\n            \"lng\": -0.203564,\n            \"lat\": 51.521265\n        }\n    },\n    \"nearestPlace\": \"Bayswater, London\",\n    \"coordinates\": {\n        \"lng\": -0.203586,\n        \"lat\": 51.521251\n    },\n    \"words\": \"index.home.raft\",\n    \"language\": \"en\",\n    \"map\": \"https://w3w.co/index.home.raft\"\n}"
				},
				{
					"name": "401 InvalidKey",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-3wa?key=WrongKEY&coordinates=51.521251,-0.203586&language=en",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-3wa"
							],
							"query": [
								{
									"key": "key",
									"value": "WrongKEY"
								},
								{
									"key": "coordinates",
									"value": "51.521251,-0.203586",
									"description": "Coordinates as a comma separated string of latitude and longitude"
								},
								{
									"key": "format",
									"value": "json",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en"
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"InvalidKey\",\n        \"message\": \"Authentication failed; invalid API key\"\n    }\n}"
				},
				{
					"name": "400 BadLanguage",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-3wa?key=YOUR-API-KEY&coordinates=51.521251,-0.203586&language=rr",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-3wa"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY"
								},
								{
									"key": "coordinates",
									"value": "51.521251,-0.203586"
								},
								{
									"key": "format",
									"value": "json",
									"disabled": true
								},
								{
									"key": "language",
									"value": "rr"
								},
								{
									"key": "locale",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n  \"error\": {\n    \"code\": \"BadLanguage\",\n    \"message\": \"language and locale must not be different\"\n  }\n}"
				},
				{
					"name": "400 BadLocale",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-3wa?key=YOUR-API-KEY&coordinates=51.521251,-0.203586&locale=xx",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-3wa"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY"
								},
								{
									"key": "coordinates",
									"value": "51.521251,-0.203586"
								},
								{
									"key": "format",
									"value": "json",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "xx"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n  \"error\": {\n    \"code\": \"BadCoordinates\",\n    \"message\": \"failed to parse one of the coordinates as a valid decimal number\"\n  }\n}"
				},
				{
					"name": "400 BadCoordinates",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-3wa?key=YOUR-API-KEY&coordinates=x,x&language=en",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-3wa"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY"
								},
								{
									"key": "coordinates",
									"value": "x,x"
								},
								{
									"key": "format",
									"value": "json",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en"
								},
								{
									"key": "locale",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n  \"error\": {\n    \"code\": \"BadCoordinates\",\n    \"message\": \"failed to parse one of the coordinates as a valid decimal number\"\n  }\n}"
				},
				{
					"name": "400 BadFormat",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-3wa?key=YOUR-API-KEY&coordinates=51.521251,-0.203586&format=xx&language=en",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-3wa"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY"
								},
								{
									"key": "coordinates",
									"value": "51.521251,-0.203586"
								},
								{
									"key": "format",
									"value": "xx"
								},
								{
									"key": "language",
									"value": "en"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadFormat\",\n        \"message\": \"Format must be one of json,geojson\"\n    }\n}"
				}
			]
		},
		{
			"name": "convert-to-coordinates",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.what3words.com/v3/convert-to-coordinates?key=YOUR-API-KEY",
					"host": [
						"https://api.what3words.com/v3"
					],
					"path": [
						"convert-to-coordinates"
					],
					"query": [
						{
							"key": "key",
							"value": "YOUR-API-KEY",
							"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
						},
						{
							"key": "format",
							"value": "json",
							"description": "Return data format type; can be either json (the default) or geojson",
							"disabled": true
						},
						{
							"key": "words",
							"value": "///filled.count.soap",
							"description": "A 3 word address as a string. It must be three words separated with dots or a japanese middle dot character (・). Words separated by spaces will be rejected. Optionally, the 3 word address can be prefixed with /// (which would be encoded as %2F%2F%2F)",
							"disabled": true
						},
						{
							"key": "locale",
							"value": null,
							"description": "Locale to specify a variant of a language ",
							"disabled": true
						}
					]
				},
				"description": "\nThis endpoint makes an HTTP GET request to the specified URL to convert a three-word address (what3words) to coordinates. It requires the API key and the three-word address as query parameters.\n\nThe response to the request will have a status code of 200, and it will include the coordinates corresponding to the provided three-word address, along with additional information such as the country, nearest place, language, and map details.\n\nExample:\n```plaintext\nGET https://api.what3words.com/v3/convert-to-coordinates?key=YOUR-API-KEY&words=filled.count.soap\n```\n\nResponse:\n```json\n{\n    \"country\": \"\",\n    \"square\": {\n        \"southwest\": {\n            \"lng\": 0,\n            \"lat\": 0\n        },\n        \"northeast\": {\n            \"lng\": 0,\n            \"lat\": 0\n        }\n    },\n    \"nearestPlace\": \"\",\n    \"coordinates\": {\n        \"lng\": 0,\n        \"lat\": 0\n    },\n    \"words\": \"\",\n    \"language\": \"\",\n    \"map\": \"\"\n}\n```\n"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-coordinates?key=YOUR-API-KEY&words=///filled.count.soap",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-coordinates"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "format",
									"value": "json",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								},
								{
									"key": "words",
									"value": "///filled.count.soap",
									"description": "A 3 word address as a string. It must be three words separated with dots or a japanese middle dot character (・). Words separated by spaces will be rejected. Optionally, the 3 word address can be prefixed with /// (which would be encoded as %2F%2F%2F)"
								},
								{
									"key": "locale",
									"value": null,
									"description": "Locale to specify a variant of a language ",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"country\": \"GB\",\n    \"square\": {\n        \"southwest\": {\n            \"lng\": -0.195543,\n            \"lat\": 51.520833\n        },\n        \"northeast\": {\n            \"lng\": -0.195499,\n            \"lat\": 51.52086\n        }\n    },\n    \"nearestPlace\": \"Bayswater, London\",\n    \"coordinates\": {\n        \"lng\": -0.195521,\n        \"lat\": 51.520847\n    },\n    \"words\": \"filled.count.soap\",\n    \"language\": \"en\",\n    \"map\": \"https://w3w.co/filled.count.soap\"\n}"
				},
				{
					"name": "401 InvalidKey",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-coordinates?key=wrongKey",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-coordinates"
							],
							"query": [
								{
									"key": "key",
									"value": "wrongKey",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "format",
									"value": "json",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								},
								{
									"key": "words",
									"value": "///filled.count.soap",
									"description": "A 3 word address as a string. It must be three words separated with dots or a japanese middle dot character (・). Words separated by spaces will be rejected. Optionally, the 3 word address can be prefixed with /// (which would be encoded as %2F%2F%2F)",
									"disabled": true
								},
								{
									"key": "locale",
									"value": null,
									"description": "Locale to specify a variant of a language ",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"InvalidKey\",\n        \"message\": \"Authentication failed; invalid API key\"\n    }\n}"
				},
				{
					"name": "400 BadFormat",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-coordinates?key=YOUR-API-KEY&format=xx",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-coordinates"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "format",
									"value": "xx",
									"description": "Return data format type; can be either json (the default) or geojson"
								},
								{
									"key": "words",
									"value": "///filled.count.soap",
									"description": "A 3 word address as a string. It must be three words separated with dots or a japanese middle dot character (・). Words separated by spaces will be rejected. Optionally, the 3 word address can be prefixed with /// (which would be encoded as %2F%2F%2F)",
									"disabled": true
								},
								{
									"key": "locale",
									"value": null,
									"description": "Locale to specify a variant of a language ",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadFormat\",\n        \"message\": \"Format must be one of json,geojson\"\n    }\n}"
				},
				{
					"name": "400 BadWords",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-coordinates?key=YOUR-API-KEY&words=///filled.count.soa",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-coordinates"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "format",
									"value": "json",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								},
								{
									"key": "words",
									"value": "///filled.count.soa",
									"description": "A 3 word address as a string. It must be three words separated with dots or a japanese middle dot character (・). Words separated by spaces will be rejected. Optionally, the 3 word address can be prefixed with /// (which would be encoded as %2F%2F%2F)"
								},
								{
									"key": "locale",
									"value": null,
									"description": "Locale to specify a variant of a language ",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadWords\",\n        \"message\": \"words must be a valid 3 word address, such as filled.count.soap or ///filled.count.soap\"\n    }\n}"
				},
				{
					"name": "400 MissingWords",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/convert-to-coordinates?key=YOUR-API-KEY",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"convert-to-coordinates"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "format",
									"value": "json",
									"description": "Return data format type; can be either json (the default) or geojson",
									"disabled": true
								},
								{
									"key": "words",
									"value": "///filled.count.soap",
									"description": "A 3 word address as a string. It must be three words separated with dots or a japanese middle dot character (・). Words separated by spaces will be rejected. Optionally, the 3 word address can be prefixed with /// (which would be encoded as %2F%2F%2F)",
									"disabled": true
								},
								{
									"key": "locale",
									"value": null,
									"description": "Locale to specify a variant of a language ",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "autosuggest",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s",
					"host": [
						"https://api.what3words.com/v3"
					],
					"path": [
						"autosuggest"
					],
					"query": [
						{
							"key": "key",
							"value": "YOUR-API-KEY",
							"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
						},
						{
							"key": "input",
							"value": "filled.count.s",
							"description": "e.g. ///filled.count.s, e.g. filled.count.s"
						},
						{
							"key": "focus",
							"value": "50.842404,4.361177",
							"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
							"disabled": true
						},
						{
							"key": "clip-to-country",
							"value": "GB,BE",
							"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
							"disabled": true
						},
						{
							"key": "clip-to-bounding-box",
							"value": "51.515900, -0.212517,51.527649, -0.191746",
							"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
							"disabled": true
						},
						{
							"key": "clip-to-circle",
							"value": "51.4243877,-0.3474524,10",
							"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
							"disabled": true
						},
						{
							"key": "clip-to-polygon",
							"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
							"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
							"disabled": true
						},
						{
							"key": "input-type",
							"value": "text",
							"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
							"disabled": true
						},
						{
							"key": "language",
							"value": "en",
							"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
							"disabled": true
						},
						{
							"key": "prefer-land",
							"value": "false",
							"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
							"disabled": true
						},
						{
							"key": "locale",
							"value": "mn_la",
							"description": "Locale to specify a variant of a language",
							"disabled": true
						}
					]
				},
				"description": "\nThis endpoint makes an HTTP GET request to the W3W API to retrieve auto-suggestions based on the input query. The request includes the 'key' parameter for authentication and the 'input' parameter to specify the query.\n\n### Request\n- Method: GET\n- URL: https://api.what3words.com/v3/autosuggest\n- Query Parameters:\n    - key (string): The authentication key\n    - input (string): The input query for auto-suggestions\n\n### Response\n- Status: 200 OK\n- Body:\n    ```json\n    {\n        \"suggestions\": [\n            {\n                \"country\": \"\",\n                \"nearestPlace\": \"\",\n                \"words\": \"\",\n                \"rank\": 0,\n                \"language\": \"\"\n            }\n        ]\n    }\n    ```\n\nThe response contains an array of suggestions, with each suggestion including details such as country, nearest place, words, rank, and language.\n\n"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"suggestions\": [\n        {\n            \"country\": \"US\",\n            \"nearestPlace\": \"Chillum, Maryland\",\n            \"words\": \"filled.count.also\",\n            \"rank\": 1,\n            \"language\": \"en\"\n        },\n        {\n            \"country\": \"US\",\n            \"nearestPlace\": \"Sheboygan, Wisconsin\",\n            \"words\": \"filled.count.case\",\n            \"rank\": 2,\n            \"language\": \"en\"\n        },\n        {\n            \"country\": \"US\",\n            \"nearestPlace\": \"Roseville, Minnesota\",\n            \"words\": \"filled.count.best\",\n            \"rank\": 3,\n            \"language\": \"en\"\n        }\n    ]\n}"
				},
				{
					"name": "401 InvalidKey",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=xx&input=filled.count.s",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "xx",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"InvalidKey\",\n        \"message\": \"Authentication failed; invalid API key\"\n    }\n}"
				},
				{
					"name": "400 MissingInput",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"MissingInput\",\n        \"message\": \"input must be specified\"\n    }\n}"
				},
				{
					"name": "400 BadFocus",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&focus=",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1."
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadFocus\",\n        \"message\": \"focus must be a lat,lng\"\n    }\n}"
				},
				{
					"name": "400 BadClipToCountry",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&clip-to-country=GBR",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GBR",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadClipToCountry\",\n        \"message\": \"Countries are specified as a comma separated list of uppercase ISO 3166-1 alpha-2 country codes, such as US,CA\"\n    }\n}"
				},
				{
					"name": "400 BadClipToBoundingBox",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&clip-to-bounding-box=x,x",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "x,x",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4"
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadClipToBoundingBox\",\n        \"message\": \"Must be four lat,lng,lat,lng coordinates such as 50,-2,53.12,2.34\"\n    }\n}"
				},
				{
					"name": "400 BadClipToCircle",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&clip-to-circle=51.4243877,-0.3474524,10",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524."
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadClipToCircle\",\n        \"message\": \"clip-to-circle needs to be lat,lng,km. Example: 51.453,0.344,112\"\n    }\n}"
				},
				{
					"name": "400 BadClipToPolygon",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&clip-to-polygon=x,x",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "x,x",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs."
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadClipToPolygon\",\n        \"message\": \"Failed to parse one of the coordinates as a valid decimal number\"\n    }\n}"
				},
				{
					"name": "400 MissingLanguage",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&input-type=text",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice."
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"MissingLanguage\",\n        \"message\": \"for voice input. language must be specified\"\n    }\n}"
				},
				{
					"name": "400 BadLanguage",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&input-type=nmdp-asr",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "nmdp-asr",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice."
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadLanguage\",\n        \"message\": \"language must be an ISO 639-1 2 letter code, such as 'en' or 'fr'\"\n    }\n}"
				},
				{
					"name": "400 BadInputType",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&prefer-land=x",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "x",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea."
								},
								{
									"key": "headers",
									"value": "",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadInputType\",\n        \"message\": \"prefer-land must be one of true or false\"\n    }\n}"
				},
				{
					"name": "400 BadLocale",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&locale=mn_la",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadLanguage\",\n        \"message\": \"language and locale must not be different\"\n    }\n}"
				}
			]
		},
		{
			"name": "autosuggest-with-coordinates",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s",
					"host": [
						"https://api.what3words.com/v3"
					],
					"path": [
						"autosuggest"
					],
					"query": [
						{
							"key": "key",
							"value": "YOUR-API-KEY",
							"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
						},
						{
							"key": "input",
							"value": "filled.count.s",
							"description": "e.g. ///filled.count.s, e.g. filled.count.s"
						},
						{
							"key": "focus",
							"value": "50.842404,4.361177",
							"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
							"disabled": true
						},
						{
							"key": "clip-to-country",
							"value": "GB,BE",
							"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
							"disabled": true
						},
						{
							"key": "clip-to-bounding-box",
							"value": "51.515900, -0.212517,51.527649, -0.191746",
							"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
							"disabled": true
						},
						{
							"key": "clip-to-circle",
							"value": "51.4243877,-0.3474524,10",
							"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
							"disabled": true
						},
						{
							"key": "clip-to-polygon",
							"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
							"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
							"disabled": true
						},
						{
							"key": "input-type",
							"value": "text",
							"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
							"disabled": true
						},
						{
							"key": "language",
							"value": "en",
							"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
							"disabled": true
						},
						{
							"key": "prefer-land",
							"value": "false",
							"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
							"disabled": true
						},
						{
							"key": "locale",
							"value": "mn_la",
							"description": "Locale to specify a variant of a language",
							"disabled": true
						}
					]
				},
				"description": "\nThis endpoint makes an HTTP GET request to the W3W API to retrieve auto-suggestions based on the input query. The request includes the 'key' parameter for authentication and the 'input' parameter to specify the query.\n\n### Request\n- Method: GET\n- URL: https://api.what3words.com/v3/autosuggest\n- Query Parameters:\n    - key (string): The authentication key\n    - input (string): The input query for auto-suggestions\n\n### Response\n- Status: 200 OK\n- Body:\n    ```json\n    {\n        \"suggestions\": [\n            {\n                \"country\": \"\",\n                \"nearestPlace\": \"\",\n                \"words\": \"\",\n                \"rank\": 0,\n                \"language\": \"\"\n            }\n        ]\n    }\n    ```\n\nThe response contains an array of suggestions, with each suggestion including details such as country, nearest place, words, rank, and language.\n\n"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"suggestions\": [\n        {\n            \"country\": \"US\",\n            \"nearestPlace\": \"Chillum, Maryland\",\n            \"words\": \"filled.count.also\",\n            \"rank\": 1,\n            \"language\": \"en\"\n        },\n        {\n            \"country\": \"US\",\n            \"nearestPlace\": \"Sheboygan, Wisconsin\",\n            \"words\": \"filled.count.case\",\n            \"rank\": 2,\n            \"language\": \"en\"\n        },\n        {\n            \"country\": \"US\",\n            \"nearestPlace\": \"Roseville, Minnesota\",\n            \"words\": \"filled.count.best\",\n            \"rank\": 3,\n            \"language\": \"en\"\n        }\n    ]\n}"
				},
				{
					"name": "401 InvalidKey",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=xx&input=filled.count.s",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "xx",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"InvalidKey\",\n        \"message\": \"Authentication failed; invalid API key\"\n    }\n}"
				},
				{
					"name": "400 MissingInput",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"MissingInput\",\n        \"message\": \"input must be specified\"\n    }\n}"
				},
				{
					"name": "400 BadFocus",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&focus=",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1."
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadFocus\",\n        \"message\": \"focus must be a lat,lng\"\n    }\n}"
				},
				{
					"name": "400 BadClipToCountry",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&clip-to-country=GBR",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GBR",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadClipToCountry\",\n        \"message\": \"Countries are specified as a comma separated list of uppercase ISO 3166-1 alpha-2 country codes, such as US,CA\"\n    }\n}"
				},
				{
					"name": "400 BadClipToBoundingBox",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&clip-to-bounding-box=x,x",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "x,x",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4"
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadClipToBoundingBox\",\n        \"message\": \"Must be four lat,lng,lat,lng coordinates such as 50,-2,53.12,2.34\"\n    }\n}"
				},
				{
					"name": "400 BadClipToCircle",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&clip-to-circle=51.4243877,-0.3474524,10",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524."
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadClipToCircle\",\n        \"message\": \"clip-to-circle needs to be lat,lng,km. Example: 51.453,0.344,112\"\n    }\n}"
				},
				{
					"name": "400 BadClipToPolygon",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&clip-to-polygon=x,x",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "x,x",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs."
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadClipToPolygon\",\n        \"message\": \"Failed to parse one of the coordinates as a valid decimal number\"\n    }\n}"
				},
				{
					"name": "400 MissingLanguage",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&input-type=text",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice."
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"MissingLanguage\",\n        \"message\": \"for voice input. language must be specified\"\n    }\n}"
				},
				{
					"name": "400 BadLanguage",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&input-type=nmdp-asr",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "nmdp-asr",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice."
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadLanguage\",\n        \"message\": \"language must be an ISO 639-1 2 letter code, such as 'en' or 'fr'\"\n    }\n}"
				},
				{
					"name": "400 BadInputType",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&prefer-land=x",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "x",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea."
								},
								{
									"key": "headers",
									"value": "",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadInputType\",\n        \"message\": \"prefer-land must be one of true or false\"\n    }\n}"
				},
				{
					"name": "400 BadLocale",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s&locale=mn_la",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"BadLanguage\",\n        \"message\": \"language and locale must not be different\"\n    }\n}"
				},
				{
					"name": "401 InvalidKeyNoPermissions",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/autosuggest?key=YOUR-API-KEY&input=filled.count.s",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"autosuggest"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "input",
									"value": "filled.count.s",
									"description": "e.g. ///filled.count.s, e.g. filled.count.s"
								},
								{
									"key": "focus",
									"value": "50.842404,4.361177",
									"description": "This is a location, specified as latitude,longitude (often where the user making the query is). If specified, the results will be weighted to give preference to those near the focus. For convenience, longitude is allowed to wrap around the 180 line, so 361 is equivalent to 1.",
									"disabled": true
								},
								{
									"key": "clip-to-country",
									"value": "GB,BE",
									"description": "LIST HERE https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
									"disabled": true
								},
								{
									"key": "clip-to-bounding-box",
									"value": "51.515900, -0.212517,51.527649, -0.191746",
									"description": "Restrict AutoSuggest results to a bounding box, specified by coordinates.south_lat,west_lng,north_lat,east_lng, where:south_lat less than or equal to north_latwest_lng less than or equal to east_lngIn other words, latitudes and longitudes should be specified order of increasing size. Lng is allowed to wrap, so that you can specify bounding boxes which cross the ante-meridian: -4,178.2,22,195.4",
									"disabled": true
								},
								{
									"key": "clip-to-circle",
									"value": "51.4243877,-0.3474524,10",
									"description": "the results are constrained to those that are within 10 km of the point 51.4243877,-0.3474524.",
									"disabled": true
								},
								{
									"key": "clip-to-polygon",
									"value": "51.521,-0.343,52.6,2.3324,54.234,8.343,51.521,-0.343",
									"description": "Restrict AutoSuggest results to a polygon, specified by a comma-separated list of lat,lng pairs. The polygon should be closed, i.e. the first element should be repeated as the last element; also the list should contain at least 4 entries. The API is currently limited to accepting up to 25 pairs.",
									"disabled": true
								},
								{
									"key": "input-type",
									"value": "text",
									"description": "For power users, used to specify voice input mode. Can be text (default),vocon-hybrid, nmdp-asr or generic-voice.",
									"disabled": true
								},
								{
									"key": "language",
									"value": "en",
									"description": "For normal text input, specifies a fallback language, which will help guide AutoSuggest if the input is particularly messy. If specified, this parameter must be a supported 3 word address language as an ISO 639-1 2 letter code.",
									"disabled": true
								},
								{
									"key": "prefer-land",
									"value": "false",
									"description": "Makes AutoSuggest prefer results on land to those in the sea. This setting is on by default. Use false to disable this setting and receive more suggestions in the sea.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "mn_la",
									"description": "Locale to specify a variant of a language",
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"InvalidKey\",\n        \"message\": \"Auth failed; /v3/autosuggest-with-coordinates. Contact support@what3words.com or your account manager to enable your account\"\n    }\n}"
				}
			]
		},
		{
			"name": "available-languages",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.what3words.com/v3/available-languages?key=YOUR-API-KEY",
					"host": [
						"https://api.what3words.com/v3"
					],
					"path": [
						"available-languages"
					],
					"query": [
						{
							"key": "key",
							"value": "YOUR-API-KEY",
							"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
						}
					]
				},
				"description": "\nThis endpoint makes an HTTP GET request to retrieve the available languages supported by the w3w API. It requires a valid API key as a query parameter.\n\n### Request\n\n- Method: GET\n- URL: https://api.what3words.com/v3/available-languages\n- Query Parameters:\n    - key (string, required): The API key for authentication\n\n### Response\n\n- Status: 200 OK\n- Body:\n    ```json\n    {\n        \"languages\": [\n            {\n                \"nativeName\": \"\",\n                \"code\": \"\",\n                \"name\": \"\"\n            }\n        ]\n    }\n    ```\n\nThe response returns an array of languages, where each language object contains the nativeName, code, and name. The nativeName represents the native name of the language, the code represents the language code, and the name represents the name of the language.\n\n"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/available-languages?key=YOUR-API-KEY",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"available-languages"
							],
							"query": [
								{
									"key": "key",
									"value": "YOUR-API-KEY",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"languages\": [\n        {\n            \"nativeName\": \"Deutsch\",\n            \"code\": \"de\",\n            \"name\": \"German\"\n        },\n        {\n            \"nativeName\": \"हिन्दी\",\n            \"code\": \"hi\",\n            \"name\": \"Hindi\"\n        },\n        {\n            \"nativeName\": \"ລາວ\",\n            \"code\": \"lo\",\n            \"name\": \"Lao\"\n        },\n        {\n            \"nativeName\": \"Português\",\n            \"code\": \"pt\",\n            \"name\": \"Portuguese\"\n        },\n        {\n            \"nativeName\": \"Magyar\",\n            \"code\": \"hu\",\n            \"name\": \"Hungarian\"\n        },\n        {\n            \"nativeName\": \"Українська\",\n            \"code\": \"uk\",\n            \"name\": \"Ukrainian\"\n        },\n        {\n            \"nativeName\": \"Bahasa Indonesia\",\n            \"code\": \"id\",\n            \"name\": \"Bahasa Indonesia\"\n        },\n        {\n            \"nativeName\": \"اردو\",\n            \"code\": \"ur\",\n            \"name\": \"Urdu\"\n        },\n        {\n            \"nativeName\": \"മലയാളം\",\n            \"code\": \"ml\",\n            \"name\": \"Malayalam\"\n        },\n        {\n            \"nativeName\": \"Монгол хэл\",\n            \"code\": \"mn\",\n            \"name\": \"Mongolian\",\n            \"locales\": [\n                {\n                    \"nativeName\": \"Монгол хэл (Латинаар)\",\n                    \"name\": \"Mongolian (Latin)\",\n                    \"code\": \"mn_la\"\n                },\n                {\n                    \"nativeName\": \"Монгол хэл (Криллээр)\",\n                    \"name\": \"Mongolian (Cyrillic)\",\n                    \"code\": \"mn_cy\"\n                }\n            ]\n        },\n        {\n            \"nativeName\": \"Afrikaans\",\n            \"code\": \"af\",\n            \"name\": \"Afrikaans\"\n        },\n        {\n            \"nativeName\": \"मराठी\",\n            \"code\": \"mr\",\n            \"name\": \"Marathi\"\n        },\n        {\n            \"nativeName\": \"Bahasa Malaysia\",\n            \"code\": \"ms\",\n            \"name\": \"Bahasa Malaysia\"\n        },\n        {\n            \"nativeName\": \"Ελληνικά\",\n            \"code\": \"el\",\n            \"name\": \"Greek\"\n        },\n        {\n            \"nativeName\": \"English\",\n            \"code\": \"en\",\n            \"name\": \"English\"\n        },\n        {\n            \"nativeName\": \"Italiano\",\n            \"code\": \"it\",\n            \"name\": \"Italian\"\n        },\n        {\n            \"nativeName\": \"አማርኛ\",\n            \"code\": \"am\",\n            \"name\": \"Amharic\"\n        },\n        {\n            \"nativeName\": \"Español\",\n            \"code\": \"es\",\n            \"name\": \"Spanish\"\n        },\n        {\n            \"nativeName\": \"中文\",\n            \"code\": \"zh\",\n            \"name\": \"Chinese\",\n            \"locales\": [\n                {\n                    \"nativeName\": \"中文（繁體）\",\n                    \"name\": \"Chinese (Traditional)\",\n                    \"code\": \"zh_tr\"\n                },\n                {\n                    \"nativeName\": \"中文（简体）\",\n                    \"name\": \"Chinese (Simplified)\",\n                    \"code\": \"zh_si\"\n                }\n            ]\n        },\n        {\n            \"nativeName\": \"Eesti\",\n            \"code\": \"et\",\n            \"name\": \"Estonian\"\n        },\n        {\n            \"nativeName\": \"العربية\",\n            \"code\": \"ar\",\n            \"name\": \"Arabic\"\n        },\n        {\n            \"nativeName\": \"Tiếng Việt\",\n            \"code\": \"vi\",\n            \"name\": \"Vietnamese\"\n        },\n        {\n            \"nativeName\": \"日本語\",\n            \"code\": \"ja\",\n            \"name\": \"Japanese\"\n        },\n        {\n            \"nativeName\": \"नेपाली\",\n            \"code\": \"ne\",\n            \"name\": \"Nepali\"\n        },\n        {\n            \"nativeName\": \"فارسی\",\n            \"code\": \"fa\",\n            \"name\": \"Persian\"\n        },\n        {\n            \"nativeName\": \"isiZulu\",\n            \"code\": \"zu\",\n            \"name\": \"isiZulu\"\n        },\n        {\n            \"nativeName\": \"Română\",\n            \"code\": \"ro\",\n            \"name\": \"Romanian\"\n        },\n        {\n            \"nativeName\": \"Nederlands\",\n            \"code\": \"nl\",\n            \"name\": \"Dutch\"\n        },\n        {\n            \"nativeName\": \"Norsk\",\n            \"code\": \"no\",\n            \"name\": \"Norwegian\"\n        },\n        {\n            \"nativeName\": \"Suomi\",\n            \"code\": \"fi\",\n            \"name\": \"Finnish\"\n        },\n        {\n            \"nativeName\": \"Русский\",\n            \"code\": \"ru\",\n            \"name\": \"Russian\"\n        },\n        {\n            \"nativeName\": \"български\",\n            \"code\": \"bg\",\n            \"name\": \"Bulgarian\"\n        },\n        {\n            \"nativeName\": \"বাংলা\",\n            \"code\": \"bn\",\n            \"name\": \"Bengali\"\n        },\n        {\n            \"nativeName\": \"Français\",\n            \"code\": \"fr\",\n            \"name\": \"French\"\n        },\n        {\n            \"nativeName\": \"සිංහල\",\n            \"code\": \"si\",\n            \"name\": \"Sinhala\"\n        },\n        {\n            \"nativeName\": \"Slovenčina\",\n            \"code\": \"sk\",\n            \"name\": \"Slovak\"\n        },\n        {\n            \"nativeName\": \"Slovenščina\",\n            \"code\": \"sl\",\n            \"name\": \"Slovene\"\n        },\n        {\n            \"nativeName\": \"Català\",\n            \"code\": \"ca\",\n            \"name\": \"Catalan\"\n        },\n        {\n            \"nativeName\": \"Қазақ тілі\",\n            \"code\": \"kk\",\n            \"name\": \"Kazakh\",\n            \"locales\": [\n                {\n                    \"nativeName\": \"Қазақ тілі (кирилл)\",\n                    \"name\": \"Kazakh (Cyrillic)\",\n                    \"code\": \"kk_cy\"\n                },\n                {\n                    \"nativeName\": \"Qazaq tılı (Latyn)\",\n                    \"name\": \"Kazakh (Latin)\",\n                    \"code\": \"kk_la\"\n                }\n            ]\n        },\n        {\n            \"nativeName\": \"Bosanski-Crnogorski-Hrvatski-Srpski\",\n            \"code\": \"oo\",\n            \"name\": \"Bosnian-Croatian-Montenegrin-Serbian\",\n            \"locales\": [\n                {\n                    \"nativeName\": \"Bosanski-Crnogorski-Hrvatski-Srpski (latinica)\",\n                    \"name\": \"Bosnian-Croatian-Montenegrin-Serbian (Latin)\",\n                    \"code\": \"oo_la\"\n                },\n                {\n                    \"nativeName\": \"Босански-Српски-Хрватски-Црногорски (ћирилица)\",\n                    \"name\": \"Bosnian-Croatian-Montenegrin-Serbian (Cyrillic)\",\n                    \"code\": \"oo_cy\"\n                }\n            ]\n        },\n        {\n            \"nativeName\": \"ភាសាខ្មែរ\",\n            \"code\": \"km\",\n            \"name\": \"Khmer\"\n        },\n        {\n            \"nativeName\": \"ಕನ್ನಡ\",\n            \"code\": \"kn\",\n            \"name\": \"Kannada\"\n        },\n        {\n            \"nativeName\": \"ଓଡ଼ିଆ\",\n            \"code\": \"or\",\n            \"name\": \"Odia\"\n        },\n        {\n            \"nativeName\": \"Svenska\",\n            \"code\": \"sv\",\n            \"name\": \"Swedish\"\n        },\n        {\n            \"nativeName\": \"한국어\",\n            \"code\": \"ko\",\n            \"name\": \"Korean\"\n        },\n        {\n            \"nativeName\": \"Kiswahili\",\n            \"code\": \"sw\",\n            \"name\": \"Swahili\"\n        },\n        {\n            \"nativeName\": \"தமிழ்\",\n            \"code\": \"ta\",\n            \"name\": \"Tamil\"\n        },\n        {\n            \"nativeName\": \"ગુજરાતી\",\n            \"code\": \"gu\",\n            \"name\": \"Gujarati\"\n        },\n        {\n            \"nativeName\": \"Čeština\",\n            \"code\": \"cs\",\n            \"name\": \"Czech\"\n        },\n        {\n            \"nativeName\": \"isiXhosa\",\n            \"code\": \"xh\",\n            \"name\": \"isiXhosa\"\n        },\n        {\n            \"nativeName\": \"ਪੰਜਾਬੀ\",\n            \"code\": \"pa\",\n            \"name\": \"Punjabi\"\n        },\n        {\n            \"nativeName\": \"తెలుగు\",\n            \"code\": \"te\",\n            \"name\": \"Telugu\"\n        },\n        {\n            \"nativeName\": \"ไทย\",\n            \"code\": \"th\",\n            \"name\": \"Thai\"\n        },\n        {\n            \"nativeName\": \"Cymraeg\",\n            \"code\": \"cy\",\n            \"name\": \"Welsh\"\n        },\n        {\n            \"nativeName\": \"Polski\",\n            \"code\": \"pl\",\n            \"name\": \"Polish\"\n        },\n        {\n            \"nativeName\": \"Dansk\",\n            \"code\": \"da\",\n            \"name\": \"Danish\"\n        },\n        {\n            \"nativeName\": \"עברית\",\n            \"code\": \"he\",\n            \"name\": \"Hebrew\"\n        },\n        {\n            \"nativeName\": \"Türkçe\",\n            \"code\": \"tr\",\n            \"name\": \"Turkish\"\n        }\n    ]\n}"
				},
				{
					"name": "401 InvalidKey",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.what3words.com/v3/available-languages?key=xx&locale=xx",
							"host": [
								"https://api.what3words.com/v3"
							],
							"path": [
								"available-languages"
							],
							"query": [
								{
									"key": "key",
									"value": "xx",
									"description": "A valid API key; if not supplied as a parameter, a key must be supplied as a request header"
								},
								{
									"key": "locale",
									"value": "xx"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"code\": \"InvalidKey\",\n        \"message\": \"Authentication failed; invalid API key\"\n    }\n}"
				}
			]
		}
	]
}